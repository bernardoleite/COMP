/* Generated By:JJTree: Do not edit this line. ASTFunction.java Version 6.0 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTFunction extends SimpleNode {

  private String name;
  private Token t;

  public ASTFunction(int id) {
    super(id);
  }

  public ASTFunction(YAL2JVM p, int id) {
    super(p, id);
  }

  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void setToken(Token t) {
    this.t = t;
  }

  public String toString() {
    String test = super.toString();
    return test + " " + name;
  }

  public boolean prepareModule(Table currentTable) {
    int j = this.jjtGetChild(0).checkScalarOrArray(currentTable);
    if(currentTable.lookup(name) == null) {
      System.out.println("Function Save! " +name);
      currentTable.save(new Symbol(name, j, "Function"));
      return true;
    }
    else {
      System.out.println("Function Already exists! at line: " + t.beginLine);
    }
    return false;
  }

  @Override
  public boolean analyse(Table currentTable) {
    Table table = new Table(currentTable);
    System.out.println("In Function: " +name);
    boolean x = true;
    for(int i = 0; i < this.jjtGetNumChildren(); i++) {
      boolean b = this.jjtGetChild(i).analyse(table);
      if(!b)
        x = false;
    }
    return x;
  }
  /** Accept the visitor. **/
  public Object jjtAccept(YAL2JVMVisitor visitor, Object data) {

    return
    visitor.visit(this, data);
  }
}
/* JavaCC - OriginalChecksum=1cf6e0d1c50b383b44cb21122e117f5b (do not edit this line) */
